name: Build and Push Adhan API Docker Image

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Restore cached or previous artifact for cities.db
      - name: Restore cached cities.db
        id: restore-db
        uses: actions/cache@v4
        with:
          path: backend/src/data/cities.db
          key: cities-db-v1

      # 3️⃣ If not cached, generate cities.db using data_tools
      - name: Generate cities.db (if missing)
        if: steps.restore-db.outputs.cache-hit != 'true'
        run: |
          echo "cities.db not found in cache — building it..."
          python -m pip install --upgrade pip
          python -m pip install -r data_tools/src/requirements.txt || true
          python data_tools/src/main.py \
            --download https://download.geonames.org/export/dump/allCountries.zip \
            --output backend/src/data/cities.db
          ls -lh backend/src/data

      # 4️⃣ Upload cities.db as an artifact (optional backup)
      - name: Upload cities.db artifact
        if: steps.restore-db.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: cities-db
          path: backend/src/data/cities.db
          retention-days: 30

      # 5️⃣ Set up QEMU for ARM emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 6️⃣ Set up Docker Buildx (multi-arch build)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 7️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      # 8️⃣ Extract version from pyproject.toml
      - name: Extract version
        id: version
        run: |
          version=$(grep -Po '(?<=^version = ")[^"]*' backend/pyproject.toml)
          echo "VERSION=$version" >> $GITHUB_ENV

      # 9️⃣ Build & push multi-arch Docker image
      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --cache-from=type=registry,ref=aminekun90/adhan-api:cache \
            --cache-to=type=registry,ref=aminekun90/adhan-api:cache,mode=max \
            -f backend/DOCKERFILE \
            -t aminekun90/adhan-api:latest \
            -t aminekun90/adhan-api:${VERSION} \
            --push \
            .
