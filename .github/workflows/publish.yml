name: Build and Push Adhan API Docker Image

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Restore cached cities.db directory
      - name: Restore cached cities.db
        id: restore-db
        uses: actions/cache@v4
        with:
          path: backend/src/data
          key: cities-db-v1

      # 3Ô∏è‚É£ Install Python & uv for data_tools
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: data_tools/.python-version

      # 4Ô∏è‚É£ Generate cities.db if cache miss (move to container first runtime)
      - name: Generate cities.db (if cache miss)
        if: steps.restore-db.outputs.cache-hit != 'true'
        run: |
          echo "cities.db not found in cache ‚Äî building it..."
          # mkdir -p backend/src/data
          # cd data_tools
          # uv sync --locked --no-install-project --no-dev
          # uv run python main.py \
          #   --download https://download.geonames.org/export/dump/allCountries.zip \
          #   --output ../backend/src/data/cities.db
          echo "This step will be moved to container runtime..."
          # ls -lh ../backend/src/data

      # 5Ô∏è‚É£ Save cache for future runs
      # - name: Save cities.db cache
      #   if: steps.restore-db.outputs.cache-hit != 'true'
      #   uses: actions/cache@v4
      #   with:
      #     path: backend/src/data
      #     key: cities-db-v1

      # 6Ô∏è‚É£ Upload cities.db artifact (optional backup)
      # - name: Upload cities.db artifact
      #   if: steps.restore-db.outputs.cache-hit != 'true'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: cities-db
      #     path: backend/src/data
      #     retention-days: 30

      # 7Ô∏è‚É£ Set up QEMU for multi-arch Docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 8Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 9Ô∏è‚É£ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      # üîü Extract version from pyproject.toml
      - name: Extract version
        id: version
        run: |
          version=$(grep -Po '(?<=^version = ")[^"]*' backend/pyproject.toml)
          echo "VERSION=$version" >> $GITHUB_ENV

      # 1Ô∏è‚É£1Ô∏è‚É£ Build & push multi-arch Docker image
      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --cache-from=type=registry,ref=aminekun90/adhan-api:cache \
            --cache-to=type=registry,ref=aminekun90/adhan-api:cache,mode=max \
            -f DOCKERFILE \
            -t aminekun90/adhan-api:latest \
            -t aminekun90/adhan-api:${VERSION} \
            --push \
            .
